package com.sds.movieapp;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Component;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpSession;
import lombok.extern.slf4j.Slf4j;

//모든 컨트롤러에서 사용자명을 저장할 수 있도록 aop로 구현

@Slf4j
@Aspect
@Component
public class AuthAspect {
 
	//포함시킬 포인트 컷
	@Pointcut("execution(public * com.sds.movieapp.controller..*(..))")
	public void includeExecution() {}
	
	//제외시킬 포인트 컷
	@Pointcut("!execution(public * com.sds.movieapp.controller.Rest*Controller.*(..))")
	public void excludeExecution() {}
	
	//하위 컨트롤러로 들어가는 메서드 호출을 가로채서, 사용자 이름을 심어놓아야, header.html에서 사용자이름을 출력할 수 있다.
	public Object checkSesstion(ProceedingJoinPoint joinpoint) {
		Object obj = null;
		
		//스프링으로부터 세션을 얻기
		ServletRequestAttributes attr = (ServletRequestAttributes)RequestContextHolder.getRequestAttributes();
		HttpServletRequest request = attr.getRequest();
		
		String nickname=SecurityContextHolder.getContext().getAuthentication().getName();//CustomUserDetails의 이름 가져오기
		request.setAttribute("nickname", nickname);
		
		return obj;
	}
}
